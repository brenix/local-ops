clusterName: k8s
endpoint: https://k8s.lan:6443

# renovate: depName=ghcr.io/siderolabs/installer datasource=docker
talosVersion: v1.9.1
# renovate: depName=ghcr.io/siderolabs/kubelet datasource=docker
kubernetesVersion: v1.32.0

additionalApiServerCertSans: &sans
  - k8s.lan
  - &talosControlplaneVip 192.168.1.50
  - 127.0.0.1 # Kubeprism
additionalMachineCertSans: *sans

cniConfig:
  name: none
  
nodes:
  - hostname: controller
    ipAddress: 192.168.1.51, 192.168.1.52, 192.168.1.53
    controlPlane: true
    ignoreHostname: true
    networkInterfaces:
      - interface: eno1
        dhcp: true
        vip:
          ip: *talosControlplaneVip
    installDiskSelector:
      model: "CT500P3PSSD8"

controlPlane:
  schematic:
    customization:
      extraKernelArgs:
        - apparmor=0
        - init_on_alloc=0
        - init_on_free=0
        - mitigations=off
        - security=none
        - net.ifnames=1
      systemExtensions:
        officialExtensions:
          - siderolabs/amd-ucode
          - siderolabs/amdgpu

  patches:
    # Fix RBAC issue (https://github.com/siderolabs/talos/issues/9980)
    - |-
      cluster:
        apiServer:
          extraArgs:
            feature-gates: AuthorizeNodeWithSelectors=false

    # Configure containerd
    - |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |
              [plugins]
                [plugins."io.containerd.grpc.v1.cri"]
                  enable_unprivileged_ports = true
                  enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                discard_unpacked_layers = false

    # Disable search domain everywhere
    - |-
      machine:
        network:
          disableSearchDomain: true

    # Enable cluster discovery
    - |-
      cluster:
        discovery:
          enabled: true
          registries:
            kubernetes:
              disabled: false
            service:
              disabled: true

    # Disable Host DNS
    - |-
      machine:
        features:
          hostDNS:
            enabled: true
            resolveMemberNames: true
            forwardKubeDNSToHost: false

    # Configure kubelet
    - |-
      machine:
        kubelet:
          extraArgs:
            rotate-server-certificates: "true"
          extraConfig:
            maxPods: 150
          nodeIP:
            validSubnets:
                - 192.168.1.0/24

    # Tuning
    - |-
      machine:
        sysctls:
          fs.inotify.max_user_watches: 1048576
          fs.inotify.max_user_instances: 8192
          net.core.default_qdisc: fq
          net.core.rmem_max: 67108864
          net.core.wmem_max: 67108864
          net.ipv4.tcp_congestion_control: bbr
          net.ipv4.tcp_mtu_probing: 1
          net.ipv4.tcp_ecn: 0
          net.ipv4.tcp_fastopen: 3
          net.ipv4.tcp_rmem: 4096 87380 33554432
          net.ipv4.tcp_wmem: 4096 65536 33554432
          net.ipv4.tcp_window_scaling: 1
          net.ipv4.tcp_adv_win_scale: -2
          net.ipv4.tcp_notsent_lowat: 131072
          vm.nr_hugepages: 1024
          vm.max_map_count: 1048576

    # Enable KubePrism
    - |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445

    # Configure cluster
    - |-
      cluster:
        allowSchedulingOnMasters: true
        coreDNS:
          disabled: true
        proxy:
          disabled: true
        scheduler:
          config:
            apiVersion: kubescheduler.config.k8s.io/v1
            kind: KubeSchedulerConfiguration
            profiles:
              - schedulerName: default-scheduler
                pluginConfig:
                  - name: PodTopologySpread
                    args:
                      defaultingType: List
                      defaultConstraints:
                        - maxSkew: 1
                          topologyKey: kubernetes.io/hostname
                          whenUnsatisfiable: ScheduleAnyway

    # Configure NFS mount options
    - |
      machine:
        files:
          - op: overwrite
            path: /etc/nfsmount.conf
            permissions: 0o644
            content: |
              [ NFSMount_Global_Options ]
              nfsvers=4.2
              hard=True
              noatime=True
              nconnect=16

    # Configure static host entries
    - |-
      machine:
        network:
          extraHostEntries:
            - ip: 192.168.1.50
              aliases:
                - k8s.lan

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - system-upgrade
