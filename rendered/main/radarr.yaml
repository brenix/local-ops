apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/loadBalancerIPs: 192.168.2.3
  labels:
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: radarr
    app.kubernetes.io/service: radarr
    helm.sh/chart: app-template-3.5.1
  name: radarr
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 7878
    protocol: TCP
    targetPort: 7878
  selector:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/name: radarr
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: radarr
    helm.sh/chart: app-template-3.5.1
  name: radarr-config
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: radarr
    helm.sh/chart: app-template-3.5.1
  name: radarr
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/instance: radarr
      app.kubernetes.io/name: radarr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: main
        app.kubernetes.io/instance: radarr
        app.kubernetes.io/name: radarr
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: PGID
          value: ${PUID}
        - name: PUID
          value: ${PUID}
        - name: TZ
          value: ${TIMEZONE}
        image: lscr.io/linuxserver/radarr:5.10.4
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - /usr/bin/env
            - bash
            - -c
            - curl --fail localhost:7878/api/v3/system/status?apiKey=`IFS=\> && while
              read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done <
              /config/config.xml`
          failureThreshold: 5
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: main
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /downloads
          name: downloads
        - mountPath: /media
          name: media
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      serviceAccountName: default
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: radarr-config
      - hostPath:
          path: /media/downloads
          type: Directory
        name: downloads
      - hostPath:
          path: /media
          type: Directory
        name: media
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/instance: radarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: radarr
    helm.sh/chart: app-template-3.5.1
  name: radarr
  namespace: default
spec:
  ingressClassName: internal
  rules:
  - host: radarr.brenix.com
    http:
      paths:
      - backend:
          service:
            name: radarr
            port:
              number: 7878
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - radarr.brenix.com
