{
  "enabled": true,
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard",
  "rebaseWhen": "conflicted",
  "schedule": ["every weekday"],
  "pre-commit": {
    "enabled": false
  },
  "flux": {
    "fileMatch": ["cluster/.+\\.ya?ml$"]
  },
  "helm-values": {
    "fileMatch": ["cluster/.+\\.ya?ml$"]
  },
  "kubernetes": {
    "fileMatch": [
      "cluster/.+\\.ya?ml$",
    ]
  },
  "commitMessage": "[{{datasource}}] {{depName}}: {{#if isPinDigest}}{{{currentDigestShort}}} → {{{newDigestShort}}}{{else}}{{#if isMajor}}{{{currentVersion}}} → {{prettyNewMajor}}{{else}}{{#if isSingleVersion}}{{{currentVersion}}} → {{prettyNewVersion}}{{else}}{{#if newValue}}{{{currentValue}}} → {{{newValue}}}{{else}}{{{currentDigestShort}}} → {{{newDigestShort}}}{{/if}}{{/if}}{{/if}}{{/if}}",
  "regexManagers": [
    {
      "description": "Process CRD dependencies",
      "fileMatch": ["cluster/crds/.+\\.ya?ml$"],
      "matchStrings": [
        // GitRepository and Flux Kustomization where 'Git release/tag' matches 'Helm' version
        "registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n",
        // Kustomization where 'GitHub release artifact URL' matches 'Docker image' version
        "datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)\/(?<currentValue>[^/]+)\/[^/]+\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}"
    },
    {
      "description": "Process various other dependencies",
      "fileMatch": [
        "cluster/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"(?<currentValue>.*)\"\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    }
  ],
  "packageRules": [
    {
      "matchDatasources": ["helm"],
      "separateMinorPatch": true,
      "ignoreDeprecated": true
    },
    // ignore date based images
    {
      "matchDatasources": ["docker"],
      "allowedVersions": "!/^\\d{4}\\.\\d+\\.\\d+$/"
    },
  ]
}
