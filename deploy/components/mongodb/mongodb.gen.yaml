apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/service: mongodb
    helm.sh/chart: app-template-3.6.0
  name: mongodb
  namespace: default
spec:
  ports:
  - name: mongodb
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/name: mongodb
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: ceph-block
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb
    helm.sh/chart: app-template-3.6.0
  name: mongodb
  namespace: default
spec:
  podManagementPolicy: OrderedReady
  replicas: null
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/instance: mongodb
      app.kubernetes.io/name: mongodb
  serviceName: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/component: main
        app.kubernetes.io/instance: mongodb
        app.kubernetes.io/name: mongodb
    spec:
      automountServiceAccountToken: true
      containers:
      - image: docker.io/library/mongo:4.4
        name: main
        volumeMounts:
        - mountPath: /data/db
          name: data
        - mountPath: /docker-entrypoint-initdb.d
          name: initdb
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      hostUsers: true
      serviceAccountName: default
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: mongo-data
      - name: initdb
        secret:
          secretName: mongodb-init
  updateStrategy:
    type: RollingUpdate
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: mongodb
  namespace: default
spec:
  data:
  - remoteRef:
      key: MONGODB_USER
    secretKey: MONGODB_USER
  - remoteRef:
      key: MONGODB_PASS
    secretKey: MONGODB_PASS
  secretStoreRef:
    kind: ClusterSecretStore
    name: doppler
  target:
    deletionPolicy: Delete
    name: mongodb-init
    template:
      data:
        init-mongo.js: |-
          db.getSiblingDB("unifi").createUser({user: "{{ .MONGODB_USER }}", pwd: "{{ .MONGODB_PASS }}", roles: [{role: "dbOwner", db: "unifi"}]});
          db.getSiblingDB("unifi_stat").createUser({user: "{{ .MONGODB_USER }}", pwd: "{{ .MONGODB_PASS }}", roles: [{role: "dbOwner", db: "unifi_stat"}]});
      engineVersion: v2
