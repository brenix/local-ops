apiVersion: v1
data:
  nginx.default.conf: "server {\n\tlisten 8080;\n\tserver_name nix-cache ;\n\tlocation
    / {\n\t\troot /public-nix-cache;\n\t\texpires max;\n\t\tadd_header Cache-Control
    $cache_header always;\n\t\t# Ask the upstream server if a file isn't available
    locally\n\t\terror_page 404 = @fallback;\n\t}\n\tlocation = /nix-cache-info {\n\t\tproxy_pass
    $upstream_endpoint;\n\t\tproxy_cache cachecache;\n\t\tproxy_cache_valid  200 302
    \ 60d;\n\t\texpires max;\n\t\tadd_header Cache-Control $cache_header always;\n\t}\n\tlocation
    @fallback {\n\t\tproxy_pass $upstream_endpoint;\n\t\tproxy_cache cachecache;\n\t\tproxy_cache_valid
    \ 200 302  60d;\n\t\texpires max;\n\t\tadd_header Cache-Control $cache_header
    always;\n\t}\n\tresolver 1.1.1.1 ipv6=off;\n\tset $upstream_endpoint http://cache.nixos.org;\n}\nproxy_cache_path
    /cache levels=1:2 keys_zone=cachecache:100m max_size=25g inactive=365d use_temp_path=off;\nmap
    $status $cache_header {\n\t200     \"public\";\n\t302     \"public\";\n\tdefault
    \"no-cache\";\n}\n"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: nix-cache
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nix-cache
    helm.sh/chart: app-template-3.6.1
  name: nix-cache-config
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    lbipam.cilium.io/ips: 192.168.2.15
  labels:
    app.kubernetes.io/instance: nix-cache
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nix-cache
    app.kubernetes.io/service: nix-cache
    helm.sh/chart: app-template-3.6.1
  name: nix-cache
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: nix-cache
    app.kubernetes.io/name: nix-cache
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nix-cache
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 30Gi
  storageClassName: ceph-block
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: nix-cache
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nix-cache
    helm.sh/chart: app-template-3.6.1
  name: nix-cache
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/instance: nix-cache
      app.kubernetes.io/name: nix-cache
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configMaps: eadd7683c23a64012d08168d169c296a54442e50d10b1a44c6bc0c8362a46fee
      labels:
        app.kubernetes.io/component: main
        app.kubernetes.io/instance: nix-cache
        app.kubernetes.io/name: nix-cache
    spec:
      automountServiceAccountToken: true
      containers:
      - image: cgr.dev/chainguard/nginx:latest
        imagePullPolicy: Always
        name: main
        resources:
          limits:
            memory: 256M
          requests:
            cpu: 10m
            memory: 64M
        volumeMounts:
        - mountPath: /cache
          name: cache
        - mountPath: /etc/nginx/conf.d/nginx.default.conf
          name: config
          subPath: nginx.default.conf
        - mountPath: /public-nix-cache
          name: public-nix-cache
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      securityContext:
        fsGroup: 65532
      serviceAccountName: default
      volumes:
      - name: cache
        persistentVolumeClaim:
          claimName: nix-cache
      - configMap:
          name: nix-cache-config
        name: config
      - emptyDir: {}
        name: public-nix-cache
