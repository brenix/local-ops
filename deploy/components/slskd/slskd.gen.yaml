apiVersion: v1
data:
  beets.sh: |
    #!/usr/bin/env sh
    name=$(echo "$1" | tr -d '\\' | jq -r '@uri "\(.localDirectoryName)"')
    wget -q -O/dev/null \
         --post-data "name=${name}&path=${name}" \
         --header="X-API-KEY: ${BETANIN_API_KEY}" \
         --header="User-Agent: notify-beats.sh" \
          "http://${BEETS_HOST}/api/torrents"
  slskd.yml: |
    ---
    directories:
      downloads: /media/downloads/soulseek/complete
      incomplete: /media/downloads/soulseek/incomplete
    flags:
      no_version_check: true
    integration:
      scripts:
        beets:
          on:
            - DownloadDirectoryComplete
          run:
            executable: /bin/sh
            arglist:
              - -c
              - /scripts/beets.sh "$SLSKD_SCRIPT_DATA"
        debug:
          on:
            - DownloadDirectoryComplete
          run:
            executable: /bin/sh
            arglist:
              - -c
              - echo "$SLSKD_SCRIPT_DATA" | tr -d '\\' >>/config/debug.txt
    metrics:
      enabled: true
      url: /metrics
      authentication:
        disabled: true
    permissions:
      file:
        mode: 750
    remote_configuration: false
    shares:
      directories:
        - /media/downloads/soulseek/shared
      filters:
        - \.ini$
        - Thumbs.db$
        - \.DS_Store$
kind: ConfigMap
metadata:
  name: slskd
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    lbipam.cilium.io/ips: 192.168.2.6
  labels:
    app.kubernetes.io/instance: slskd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: slskd
    app.kubernetes.io/service: slskd
    helm.sh/chart: app-template-3.7.3
  name: slskd
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  - name: soulseek
    port: 50300
    protocol: TCP
    targetPort: 50300
  selector:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: slskd
    app.kubernetes.io/name: slskd
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: slskd-data
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: ceph-block
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: slskd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: slskd
    helm.sh/chart: app-template-3.7.3
  name: slskd
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/instance: slskd
      app.kubernetes.io/name: slskd
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: main
        app.kubernetes.io/instance: slskd
        app.kubernetes.io/name: slskd
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: BEETS_HOST
          value: beets.default.svc.cluster.local
        - name: DOTNET_BUNDLE_EXTRACT_BASE_DIR
          value: /tmp/.net
        - name: SLSKD_APP_DIR
          value: /config
        - name: SLSKD_HTTP_PORT
          value: "80"
        - name: SLSKD_NO_AUTH
          value: "true"
        - name: SLSKD_NO_HTTPS
          value: "true"
        - name: SLSKD_SLSK_LISTEN_PORT
          value: "50300"
        - name: TZ
          value: America/Los_Angeles
        envFrom:
        - secretRef:
            name: slskd
        image: ghcr.io/slskd/slskd:0.22.5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
        name: main
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /config/slskd.yml
          name: config-file
          readOnly: true
          subPath: slskd.yml
        - mountPath: /scripts/beets.sh
          name: config-file
          readOnly: true
          subPath: beets.sh
        - mountPath: /music
          name: media
          subPath: music
        - mountPath: /media/downloads/soulseek
          name: media
          subPath: downloads/soulseek
        - mountPath: /tmp
          name: tmp
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: slskd-data
      - configMap:
          defaultMode: 509
          name: slskd
        name: config-file
      - name: media
        nfs:
          path: /mnt/main/media
          server: truenas.home.arpa
      - emptyDir: {}
        name: tmp
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: slskd
  namespace: default
spec:
  data:
  - remoteRef:
      key: BETANIN_API_KEY
    secretKey: BETANIN_API_KEY
  - remoteRef:
      key: SLSKD_SLSK_USERNAME
    secretKey: SLSKD_SLSK_USERNAME
  - remoteRef:
      key: SLSKD_SLSK_PASSWORD
    secretKey: SLSKD_SLSK_PASSWORD
  secretStoreRef:
    kind: ClusterSecretStore
    name: doppler
  target:
    name: slskd
    template:
      data:
        BETANIN_API_KEY: '{{ .BETANIN_API_KEY}}'
        SLSKD_SLSK_PASSWORD: '{{ .SLSKD_SLSK_PASSWORD }}'
        SLSKD_SLSK_USERNAME: '{{ .SLSKD_SLSK_USERNAME }}'
      engineVersion: v2
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/instance: slskd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: slskd
    helm.sh/chart: app-template-3.7.3
  name: slskd
  namespace: default
spec:
  ingressClassName: internal
  rules:
  - host: slskd.brenix.com
    http:
      paths:
      - backend:
          service:
            name: slskd
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - slskd.brenix.com
