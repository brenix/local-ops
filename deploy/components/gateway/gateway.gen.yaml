apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: brenix.com
  namespace: kube-system
spec:
  commonName: brenix.com
  dnsNames:
  - brenix.com
  - '*.brenix.com'
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-production
  secretName: brenix.com-tls
---
apiVersion: external-secrets.io/v1alpha1
kind: PushSecret
metadata:
  name: brenix.com-tls
  namespace: kube-system
spec:
  data:
  - match:
      remoteRef:
        property: tls.crt
        remoteKey: BRENIX_COM_CRT
      secretKey: tls.crt
  - match:
      remoteRef:
        property: tls.key
        remoteKey: BRENIX_COM_KEY
      secretKey: tls.key
  secretStoreRefs:
  - kind: ClusterSecretStore
    name: doppler
  selector:
    secret:
      name: brenix.com-tls
  template:
    data:
      tls.crt: '{{ index . "tls.crt" | b64enc }}'
      tls.key: '{{ index . "tls.key" | b64enc }}'
    engineVersion: v2
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/target: external.brenix.com
  name: external
  namespace: kube-system
spec:
  gatewayClassName: envoy
  infrastructure:
    annotations:
      external-dns.alpha.kubernetes.io/hostname: external.brenix.com
      lbipam.cilium.io/ips: 192.168.2.20
  listeners:
  - allowedRoutes:
      namespaces:
        from: Same
    hostname: '*.brenix.com'
    name: http
    port: 80
    protocol: HTTP
  - allowedRoutes:
      namespaces:
        from: All
    hostname: '*.brenix.com'
    name: https
    port: 443
    protocol: HTTPS
    tls:
      certificateRefs:
      - kind: Secret
        name: brenix.com-tls
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/target: internal.brenix.com
  name: internal
  namespace: kube-system
spec:
  gatewayClassName: envoy
  infrastructure:
    annotations:
      external-dns.alpha.kubernetes.io/hostname: internal.brenix.com
      lbipam.cilium.io/ips: 192.168.2.21
  listeners:
  - allowedRoutes:
      namespaces:
        from: Same
    hostname: '*.brenix.com'
    name: http
    port: 80
    protocol: HTTP
  - allowedRoutes:
      namespaces:
        from: All
    hostname: '*.brenix.com'
    name: https
    port: 443
    protocol: HTTPS
    tls:
      certificateRefs:
      - kind: Secret
        name: brenix.com-tls
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: httpsredirect
  namespace: kube-system
spec:
  parentRefs:
  - name: internal
    namespace: kube-system
    sectionName: http
  - name: external
    namespace: kube-system
    sectionName: http
  rules:
  - filters:
    - requestRedirect:
        scheme: https
        statusCode: 301
      type: RequestRedirect
    matches:
    - path:
        type: PathPrefix
        value: /
