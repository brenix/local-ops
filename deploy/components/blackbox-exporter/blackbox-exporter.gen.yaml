apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prometheus-blackbox-exporter
    app.kubernetes.io/version: v0.26.0
    helm.sh/chart: prometheus-blackbox-exporter-9.7.0
  name: prometheus-prometheus-blackbox-exporter
  namespace: monitoring
---
apiVersion: v1
data:
  blackbox.yaml: |
    modules:
      icmp_v4:
        icmp:
          preferred_ip_protocol: ip4
        prober: icmp
        timeout: 5s
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prometheus-blackbox-exporter
    app.kubernetes.io/version: v0.26.0
    helm.sh/chart: prometheus-blackbox-exporter-9.7.0
  name: prometheus-prometheus-blackbox-exporter
  namespace: monitoring
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prometheus-blackbox-exporter
    app.kubernetes.io/version: v0.26.0
    helm.sh/chart: prometheus-blackbox-exporter-9.7.0
  name: prometheus-prometheus-blackbox-exporter
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 9115
    protocol: TCP
    targetPort: http
  - name: reloader-web
    port: 8080
    protocol: TCP
    targetPort: reloader-web
  selector:
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/name: prometheus-blackbox-exporter
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prometheus-blackbox-exporter
    app.kubernetes.io/version: v0.26.0
    helm.sh/chart: prometheus-blackbox-exporter-9.7.0
  name: prometheus-prometheus-blackbox-exporter
  namespace: monitoring
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus-blackbox-exporter
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus-blackbox-exporter
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - --config-file=/config/blackbox.yaml
        - --watch-interval=1m
        - --reload-url=http://127.0.0.1:9115/-/reload
        - --listen-address=:8080
        - --log-format=logfmt
        - --log-level=info
        image: quay.io/prometheus-operator/prometheus-config-reloader:v0.82.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: reloader-web
            scheme: HTTP
        name: config-reloader
        ports:
        - containerPort: 8080
          name: reloader-web
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz
            port: reloader-web
            scheme: HTTP
        resources:
          limits:
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /config
          name: config
      - args:
        - --config.file=/config/blackbox.yaml
        image: quay.io/prometheus/blackbox-exporter:v0.26.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: http
        name: blackbox-exporter
        ports:
        - containerPort: 9115
          name: http
        readinessProbe:
          httpGet:
            path: /-/healthy
            port: http
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /config
          name: config
      hostNetwork: false
      restartPolicy: Always
      serviceAccountName: prometheus-prometheus-blackbox-exporter
      volumes:
      - configMap:
          name: prometheus-prometheus-blackbox-exporter
        name: config
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prometheus-blackbox-exporter
    app.kubernetes.io/version: v0.26.0
    helm.sh/chart: prometheus-blackbox-exporter-9.7.0
  name: prometheus-prometheus-blackbox-exporter-google-ping
  namespace: monitoring
spec:
  endpoints:
  - honorTimestamps: true
    interval: 10s
    metricRelabelings:
    - action: replace
      replacement: google.com
      sourceLabels:
      - instance
      targetLabel: instance
    - action: replace
      replacement: google-ping
      sourceLabels:
      - target
      targetLabel: target
    params:
      module:
      - icmp_v4
      target:
      - google.com
    path: /probe
    port: http
    scheme: http
    scrapeTimeout: 30s
  jobLabel: prometheus
  namespaceSelector:
    matchNames:
    - monitoring
  selector:
    matchLabels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus-blackbox-exporter
