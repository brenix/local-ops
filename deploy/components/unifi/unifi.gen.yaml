apiVersion: v1
kind: Service
metadata:
  annotations:
    lbipam.cilium.io/ips: 192.168.2.2
  labels:
    app.kubernetes.io/instance: unifi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: unifi
    app.kubernetes.io/service: unifi
    helm.sh/chart: app-template-3.6.0
  name: unifi
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
  - name: controller
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: discovery
    port: 10001
    protocol: UDP
    targetPort: 10001
  - name: http
    port: 8443
    protocol: TCP
    targetPort: 8443
  - name: speedtest
    port: 6789
    protocol: TCP
    targetPort: 6789
  - name: stun
    port: 3478
    protocol: UDP
    targetPort: 3478
  - name: syslog
    port: 5514
    protocol: UDP
    targetPort: 5514
  selector:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: unifi
    app.kubernetes.io/name: unifi
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: unifi-data
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: ceph-block
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: unifi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: unifi
    helm.sh/chart: app-template-3.6.0
  name: unifi
  namespace: default
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/instance: unifi
      app.kubernetes.io/name: unifi
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: main
        app.kubernetes.io/instance: unifi
        app.kubernetes.io/name: unifi
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: MONGO_DBNAME
          value: unifi
        - name: MONGO_HOST
          value: mongodb.default.svc.cluster.local
        - name: MONGO_PORT
          value: "27017"
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: TZ
          value: America/Los_Angeles
        envFrom:
        - secretRef:
            name: unifi
        image: lscr.io/linuxserver/unifi-network-application:8.6.9
        name: main
        volumeMounts:
        - mountPath: /config
          name: data
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      hostUsers: true
      serviceAccountName: default
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: unifi-data
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: unifi
  namespace: default
spec:
  data:
  - remoteRef:
      key: MONGODB_USER
    secretKey: MONGODB_USER
  - remoteRef:
      key: MONGODB_PASS
    secretKey: MONGODB_PASS
  secretStoreRef:
    kind: ClusterSecretStore
    name: doppler
  target:
    name: unifi
    template:
      data:
        MONGO_PASS: '{{ .MONGODB_PASS }}'
        MONGO_USER: '{{ .MONGODB_USER }}'
      engineVersion: v2
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
  labels:
    app.kubernetes.io/instance: unifi
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: unifi
    helm.sh/chart: app-template-3.6.0
  name: unifi
  namespace: default
spec:
  ingressClassName: internal
  rules:
  - host: unifi.brenix.com
    http:
      paths:
      - backend:
          service:
            name: unifi
            port:
              number: 8443
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - unifi.brenix.com
